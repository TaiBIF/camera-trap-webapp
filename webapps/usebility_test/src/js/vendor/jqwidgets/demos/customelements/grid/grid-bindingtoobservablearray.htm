<!DOCTYPE html>
<html lang="en">
<head>
    <title id='Description'>Grid Custom Element BindingToObservableArray</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1 maximum-scale=1 minimum-scale=1" />
    <meta name="description" content="This is an example of Custom Element Grid binding to observable array." />

    <link rel="stylesheet" href="../jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="../styles/demos.css" type="text/css" />

    <script type="text/javascript" src="../scripts/webcomponents-lite.min.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcore.elements.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxdata.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxmenu.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxgrid.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxgrid.selection.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxgrid.edit.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxgrid.sort.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxgrid.columnsresize.js"></script>
    <script type="text/javascript" src="../sampledata/generatedata.js"></script>
    <script type="text/javascript" src="../scripts/demos.js"></script>
    <script type="text/javascript">
        var array = generatedata(2);

        var updateLog = (observableArray) => {
            var rows = '';
            for (var i = 0; i < observableArray.length; i++) {
                rows += observableArray.toJSON(['firstname', 'lastname', 'productname', 'quantity', 'price', 'total'], observableArray[i]);
                rows += '<br/>';
            }
            document.querySelector('#log').innerHTML = rows;
        }

        var observableArray = new jqx.observableArray(array, (changed) => updateLog(this));

        var source =
            {
                localdata: observableArray,
                datatype: 'obserableArray',
                datafields:
                [
                    { name: 'firstname', type: 'string' },
                    { name: 'lastname', type: 'string' },
                    { name: 'productname', type: 'string' },
                    { name: 'quantity', type: 'number' },
                    { name: 'price', type: 'number' },
                    { name: 'total', type: 'number' }
                ]
            };

        var dataAdapter = new jqx.dataAdapter(source);

        JQXElements.settings['gridSettings'] =
            {
                source: dataAdapter,
                sortable: true,
                columnsresize: true,
                editable: true,
                selectionmode: 'multiplecellsadvanced',
                columns: [
                    { text: 'Name', datafield: 'firstname', width: 120 },
                    { text: 'Last Name', datafield: 'lastname', width: 120 },
                    { text: 'Product', datafield: 'productname', width: 180 },
                    { text: 'Quantity', datafield: 'quantity', width: 80, cellsalign: 'right' },
                    { text: 'Unit Price', datafield: 'price', width: 90, cellsalign: 'right', cellsformat: 'c2' },
                    { text: 'Total', datafield: 'total', cellsalign: 'right', cellsformat: 'c2' }
                ]
            };

        window.onload = function() {
            var myButtons = document.querySelectorAll('jqx-button');

            updateLog(observableArray);

            myButtons[0].addEventListener('click', function() {
                var row = generatedata(1)[0];
                observableArray.push(row);
                updateLog(observableArray);
            });

            myButtons[1].addEventListener('click', function() {
                if (observableArray.length > 0) {
                    observableArray.splice(0, 1);
                    updateLog(observableArray);
                }
            });

            myButtons[2].addEventListener('click', function() {
                if (observableArray.length > 0) {
                    var row = generatedata(1)[0];
                    observableArray.set(0, row);
                    updateLog(observableArray);
                }
            });

            myButtons[3].addEventListener('click', function() {
                if (observableArray.length > 0) {
                    var row = generatedata(1)[0];
                    observableArray.set('0.firstname', row.firstname);
                    observableArray.set('0.lastname', row.lastname);
                    updateLog(observableArray);
                }
            });
        };
    </script>
</head>
<body>
    <div class="example-description">
        This example shows how to create a Custom element Grid from Observable Array data.
    </div>

    <jqx-grid settings="gridSettings"></jqx-grid>
    <br /><br />

    <jqx-button>Add Item</jqx-button>
    <jqx-button>Delete Item</jqx-button>
    <jqx-button>Update Item</jqx-button>
    <jqx-button>Update Path</jqx-button>
    <br />

    <div id="log"></div>
</body>
</html>
