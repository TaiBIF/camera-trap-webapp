<!DOCTYPE html>
<html lang="en">
<head>
    <title id='Description'>Custom Element DataTable NestedTables</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1 maximum-scale=1 minimum-scale=1" />
    <meta name="description" content="This is an example of nested tables in Custom Elements DataTable." />

    <link rel="stylesheet" href="../jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="../styles/demos.css" type="text/css" />

    <script type="text/javascript" src="../scripts/webcomponents-lite.min.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcore.elements.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxdata.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxmenu.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxdatatable.js"></script>
    <script type="text/javascript" src="../scripts/demos.js"></script>
    <script type="text/javascript">
        var source =
            {
                dataFields: [
                    { name: 'FirstName', type: 'string' },
                    { name: 'LastName', type: 'string' },
                    { name: 'Title', type: 'string' },
                    { name: 'Address', type: 'string' },
                    { name: 'City', type: 'string' }
                ],
                root: 'Employees',
                record: 'Employee',
                id: 'EmployeeID',
                dataType: 'xml',
                url: '../sampledata/employees.xml'
            };
        var employeesAdapter = new jqx.dataAdapter(source);

        var ordersSource =
            {
                dataFields: [
                    { name: 'EmployeeID', type: 'string' },
                    { name: 'ShipName', type: 'string' },
                    { name: 'ShipAddress', type: 'string' },
                    { name: 'ShipCity', type: 'string' },
                    { name: 'ShipCountry', type: 'string' },
                    { name: 'ShippedDate', type: 'date' }
                ],
                async: false,
                root: 'Orders',
                record: 'Order',
                dataType: 'xml',
                url: '../sampledata/orderdetails.xml'
            };
        var ordersDataAdapter = new jqx.dataAdapter(ordersSource, { autoBind: true });
        orders = ordersDataAdapter.records;
        
        window.onload =function() {
            var myDataTable = document.createElement('jqx-data-table');

            var nestedTables = new Array();

            var initRowDetails = function(id, row, element, rowinfo) {

                var myElement = document.createElement('jqx-data-table');
                myElement.style.margin = '10px';

                //var nestedDataTable = element.children[0];

                var filterGroup = new jqx.filter();

                var filter_or_operator = 1;

                var filterValue = id;

                var filterCondition = 'equal';

                var filter = filterGroup.createfilter('stringfilter', filterValue, filterCondition);

                // fill the orders depending on the id.
                var ordersbyid = [];

                for (var m = 0; m < orders.length; m++) {
                    var result = filter.evaluate(orders[m]['EmployeeID']);
                    if (result)
                        ordersbyid.push(orders[m]);
                }

                var ordersSource = {

                    dataFields: [
                        { name: 'EmployeeID', type: 'string' },
                        { name: 'ShipName', type: 'string' },
                        { name: 'ShipAddress', type: 'string' },
                        { name: 'ShipCity', type: 'string' },
                        { name: 'ShipCountry', type: 'string' },
                        { name: 'ShippedDate', type: 'date' }
                    ],
                    id: 'OrderID',
                    localdata: ordersbyid
                }

                if (myElement != null) {
                    var myElementAdapter = new jqx.dataAdapter(ordersSource);

                    myElement.settings = {
                        pageable: true,
                        source: myElementAdapter, width: 820, height: 180,
                        pageable: true,
                        columns: [
                            { text: 'Ship Name', dataField: 'ShipName', width: 200 },
                            { text: 'Ship Address', dataField: 'ShipAddress', width: 200 },
                            { text: 'Ship City', dataField: 'ShipCity', width: 150 },
                            { text: 'Ship Country', dataField: 'ShipCountry', width: 150 },
                            { text: 'Shipped Date', dataField: 'ShippedDate', cellsFormat: 'd', width: 200 }
                        ]
                    };
                    // store the nested Data Tables and use the Employee ID as a key.
                    nestedTables[id] = myElement;
                }
                element[0].appendChild(myElement);
            }

            myDataTable.settings = {

                source: source,
                pageable: true,
                pageSize: 3,
                rowDetails: true,
                initRowDetails: initRowDetails,
                ready: function() {
                    myDataTable.showDetails(1);
                },
                columns: [
                    { text: 'First Name', dataField: 'FirstName', width: 250 },
                    { text: 'Last Name', dataField: 'LastName', width: 250 },
                    { text: 'Title', dataField: 'Title' }
                ]

            }
            document.body.appendChild(myDataTable);
        }
    </script>
</head>
<body>
    <div class="example-description">
        Nested Data Tables.
    </div>
</body>
</html>
