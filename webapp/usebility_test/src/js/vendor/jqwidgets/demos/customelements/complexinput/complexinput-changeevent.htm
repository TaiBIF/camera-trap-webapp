<!DOCTYPE html>
<html lang="en">
<head>
    <title id='Description'>Custom Element ComplexInput ComplexInput</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1 maximum-scale=1 minimum-scale=1" />
    <meta name="description" content="This example shows the default functionalities in Custom Elements ComplexInput." />

    <link rel="stylesheet" href="../jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="../styles/demos.css" type="text/css" />

    <script type="text/javascript" src="../scripts/webcomponents-lite.min.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcore.elements.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxpanel.js"></script>
    <script type="text/javascript" src="../jqwidgets/jqxcomplexinput.js"></script>
    <script type="text/javascript" src="../scripts/demos.js"></script>
    <script type='text/javascript'>
        JQXElements.settings['ComplexInput'] =
            {
                value: '15 + 7.2i',
                spinButtons: true,
                width: 300
            }

        window.onload = function() {
            var myComplexInput = document.querySelector('jqx-complex-input');
            var myPanel = document.querySelector('jqx-panel');

            myComplexInput.addEventListener('change', function(event) {
                var args = event.args;
                if (args) {
                    var value = args.value;
                    var oldValue = args.oldValue;
                    var realPart = args.realPart;
                    var imaginaryPart = args.imaginaryPart;
                    document.querySelector('#eventsPanel').innerHTML = '<strong>' + event.type + '</strong><br />' +
                        'value: ' + value + ', old value: ' + oldValue +
                        ',<br /> real part: ' + realPart + ', imaginary part: ' + imaginaryPart + '<br />';
                }
            })
        }
    </script>
</head>
<body>
    <div class="example-description">
        This demo shows the default functionality of Custom Elements ComplexInput. This widget can be used for inputting complex numbers and getting their real and imaginary parts.
    </div>
   <jqx-complex-input settings="ComplexInput">
   </jqx-complex-input>

    <div style="margin-top: 20px;">
        Events log:
    </div>

    <jqx-panel id="eventsPanel">
    </jqx-panel>

</body>
</html>
